// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  //output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum role {
  ORANG_TUA
  PEGAWAI
  DOKTER
  ADMIN
}

enum Gender {
  MALE
  FEMALE
}

enum GrowthIndicator {
  HEIGHT_FOR_AGE
  WEIGHT_FOR_AGE
}

enum instansi {
  RUMAH_SAKIT
  PUSKESMAS
  POSYANDU
}

model user {
  id           Int       @id @default(autoincrement())
  email        String    @unique
  name         String
  password     String
  instansi     instansi?
  namaInstansi String?
  alamat       String?

  role               role
  children           child[]
  passwordResets     password_reset[]
  inputGrowthRecords GrowthRecord[]
}

model child {
  id     Int      @id @default(autoincrement())
  userId Int
  name   String
  dob    DateTime
  nik    String   @unique

  gender Gender
  user   user           @relation(fields: [userId], references: [id])
  growth GrowthRecord[]
}

model WhoStandard {
  id          Int             @id @default(autoincrement())
  indicator   GrowthIndicator
  gender      Gender
  ageInMonths Int // Usia dalam bulan
  l           Float
  m           Float
  s           Float

  @@unique([indicator, gender, ageInMonths])
}

model GrowthRecord {
  id                  Int      @id @default(autoincrement())
  childId             Int
  height              Float
  weight              Float
  inputBy             Int
  date                DateTime // Tanggal pengukuran
  ageInMonthsAtRecord Int // Usia anak saat data dicatat
  heightZScore        Float? // Hasil kalkulasi Z-Score tinggi badan

  child       child @relation(fields: [childId], references: [id])
  inputByUser user  @relation(fields: [inputBy], references: [id])
}

model password_reset {
  id          Int       @id @default(autoincrement())
  userId      Int
  tokenDigest String    @unique
  expiresAt   DateTime
  usedAt      DateTime?

  user user @relation(fields: [userId], references: [id])

  @@index([userId])
}
